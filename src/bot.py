import os
import asyncio
import schedule
import time
from datetime import datetime
from dotenv import load_dotenv
from telegram import Bot
from telegram.error import TelegramError
from perplexity_client import PerplexityClient

load_dotenv()

class LeakNewsBot:
    def __init__(self):
        self.bot = Bot(token=os.getenv('TELEGRAM_BOT_TOKEN'))
        self.channel_id = os.getenv('TELEGRAM_CHANNEL_ID')
        self.perplexity = PerplexityClient(os.getenv('PERPLEXITY_API_KEY'))
    
    async def post_news(self):
        print(f"[{datetime.now()}] –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π –æ–± —É—Ç–µ—á–∫–∞—Ö...")
        news = self.perplexity.get_weekly_leaks_news()
        
        message = f"üì∞ –ù–æ–≤–æ—Å—Ç–∏ –æ–± —É—Ç–µ—á–∫–∞—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –†–§ –∑–∞ –Ω–µ–¥–µ–ª—é\n\n{news}\n\n#—É—Ç–µ—á–∫–∏ #–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å #–¥–∞–Ω–Ω—ã–µ"
        
        try:
            await self.bot.send_message(chat_id=self.channel_id, text=message)
            print(f"[{datetime.now()}] –ù–æ–≤–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã")
        except TelegramError as e:
            print(f"[{datetime.now()}] –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}")
    
    def schedule_posts(self):
        schedule.every().monday.at("10:00").do(lambda: asyncio.run(self.post_news()))
        schedule.every().thursday.at("10:00").do(lambda: asyncio.run(self.post_news()))
        
        print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–π:")
        print("- –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –≤ 10:00")
        print("- –ß–µ—Ç–≤–µ—Ä–≥ –≤ 10:00")
        
        while True:
            schedule.run_pending()
            time.sleep(60)

if __name__ == "__main__":
    bot = LeakNewsBot()
    bot.schedule_posts()
