import os
import asyncio
import schedule
import time
from datetime import datetime
from dotenv import load_dotenv
from telegram import Bot
from telegram.error import TelegramError
from perplexity_client import PerplexityClient

load_dotenv()

class LeakNewsBot:
    def __init__(self):
        self.bot = Bot(token=os.getenv('TELEGRAM_BOT_TOKEN'))
        self.channel_id = os.getenv('TELEGRAM_CHANNEL_ID')
        self.perplexity = PerplexityClient(os.getenv('PERPLEXITY_API_KEY'))
    
    async def post_news(self):
        print(f"[{datetime.now()}] –ù–∞—á–∞–ª–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏...")
        print(f"[{datetime.now()}] Channel ID: {self.channel_id}")
        
        try:
            print(f"[{datetime.now()}] –ó–∞–ø—Ä–æ—Å –∫ Perplexity API...")
            news = self.perplexity.get_weekly_leaks_news()
            print(f"[{datetime.now()}] –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: {news[:100]}...")
            
            message = f"üì∞ –ù–æ–≤–æ—Å—Ç–∏ –æ–± —É—Ç–µ—á–∫–∞—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –†–§ –∑–∞ –Ω–µ–¥–µ–ª—é\n\n{news}\n\n#—É—Ç–µ—á–∫–∏ #–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å #–¥–∞–Ω–Ω—ã–µ"
            
            print(f"[{datetime.now()}] –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram...")
            await self.bot.send_message(chat_id=self.channel_id, text=message)
            print(f"[{datetime.now()}] ‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ")
        except TelegramError as e:
            print(f"[{datetime.now()}] ‚ùå –û—à–∏–±–∫–∞ Telegram: {e}")
        except Exception as e:
            print(f"[{datetime.now()}] ‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    def schedule_posts(self):
        schedule.every().monday.at("10:00").do(lambda: asyncio.run(self.post_news()))
        schedule.every().thursday.at("10:00").do(lambda: asyncio.run(self.post_news()))
        
        print("="*50)
        print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"üì¢ Channel ID: {self.channel_id}")
        print(f"üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–π:")
        print("   - –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –≤ 10:00 (–ú–°–ö)")
        print("   - –ß–µ—Ç–≤–µ—Ä–≥ –≤ 10:00 (–ú–°–ö)")
        print(f"‚è∞ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {datetime.now()}")
        print("="*50)
        
        while True:
            schedule.run_pending()
            time.sleep(60)

if __name__ == "__main__":
    import sys
    
    try:
        bot = LeakNewsBot()
        
        # –¢–µ—Å—Ç–æ–≤–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º --test
        if len(sys.argv) > 1 and sys.argv[1] == "--test":
            print("üß™ –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú: –ü—É–±–ª–∏–∫–∞—Ü–∏—è —Å–µ–π—á–∞—Å...")
            asyncio.run(bot.post_news())
            print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω")
        else:
            bot.schedule_posts()
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
        raise
