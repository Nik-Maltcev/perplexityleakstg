import requests
from datetime import datetime, timedelta

class PerplexityClient:
    def __init__(self, api_key):
        self.api_key = api_key
        self.base_url = "https://api.perplexity.ai/chat/completions"
    
    def get_weekly_leaks_news(self):
        today = datetime.now()
        week_ago = today - timedelta(days=7)
        
        prompt = f"""–ù–∞–π–¥–∏ —Å–∞–º—ã–µ –∑–Ω–∞—á–∏–º—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ–± —É—Ç–µ—á–∫–∞—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥ —Å {week_ago.strftime('%d.%m.%Y')} –ø–æ {today.strftime('%d.%m.%Y')}.

üåç –†–µ–≥–∏–æ–Ω—ã: –†–æ—Å—Å–∏—è, –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω, –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω, –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω, –ë–µ–ª–∞—Ä—É—Å—å, –ê—Ä–º–µ–Ω–∏—è, –ì—Ä—É–∑–∏—è

üéØ –§–æ–∫—É—Å: –∫—Ä—É–ø–Ω—ã–µ —É—Ç–µ—á–∫–∏, –∞—Ç–∞–∫–∏ –Ω–∞ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏, –≤–∑–ª–æ–º—ã, DDoS, ransomware, —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∏–Ω—Ü–∏–¥–µ–Ω—Ç—ã

üìä –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (–ë–ï–ó MARKDOWN!):

üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤: X
–ü–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏—Ö: Y

üî• –ò–ù–¶–ò–î–ï–ù–¢–´ (1-5 —Å–∞–º—ã—Ö –∑–Ω–∞—á–∏–º—ã—Ö):

‚ñ™Ô∏è –ò–ù–¶–ò–î–ï–ù–¢ 1
üìÖ –î–∞—Ç–∞: –î–î.–ú–ú.–ì–ì–ì–ì
üèõ –ö–æ–º–ø–∞–Ω–∏—è: –ù–∞–∑–≤–∞–Ω–∏–µ
üåé –°—Ç—Ä–∞–Ω–∞: –°—Ç—Ä–∞–Ω–∞
üéØ –¢–∏–ø: —É—Ç–µ—á–∫–∞/–≤–∑–ª–æ–º/DDoS/ransomware
üìä –ú–∞—Å—à—Ç–∞–±: –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã
üìù –î–∞–Ω–Ω—ã–µ: —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
‚ö†Ô∏è –ú–µ—Ç–æ–¥: –∫–∞–∫ –ø—Ä–æ–∏–∑–æ—à–ª–æ
üõ° –ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è: —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å

‚ñ™Ô∏è –ò–ù–¶–ò–î–ï–ù–¢ 2
...

üí° –í–´–í–û–î–´
‚Ä¢ –¢—Ä–µ–Ω–¥ 1
‚Ä¢ –¢—Ä–µ–Ω–¥ 2
‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è

‚ùó –í–ê–ñ–ù–û:
- –ò—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û —ç–º–æ–¥–∑–∏, –ø—Ä–æ–±–µ–ª—ã –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
- –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π markdown (**, __, ##, -, *)
- –ò—Å–ø–æ–ª—å–∑—É–π ‚ñ™Ô∏è –¥–ª—è –ø—É–Ω–∫—Ç–æ–≤ —Å–ø–∏—Å–∫–∞
- –ò—Å–ø–æ–ª—å–∑—É–π ‚Ä¢ –¥–ª—è –ø–æ–¥–ø—É–Ω–∫—Ç–æ–≤
- –¢–û–õ–¨–ö–û —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥
- –¢–û–õ–¨–ö–û –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
- –ï—Å–ª–∏ –Ω–µ—Ç –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤: "üîí –ó–∞ –Ω–µ–¥–µ–ª—é –∫—Ä—É–ø–Ω—ã—Ö –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤ –Ω–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ.\""""

        headers = {
            "Authorization": f"Bearer {self.api_key}",
            "Content-Type": "application/json"
        }
        
        payload = {
            "model": "sonar-pro",
            "messages": [
                {"role": "system", "content": "–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. –°–æ–∑–¥–∞–≤–∞–π –æ–±–∑–æ—Ä—ã –ë–ï–ó markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û —ç–º–æ–¥–∑–∏, –ø—Ä–æ–±–µ–ª—ã, –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –∏ —Å–∏–º–≤–æ–ª—ã ‚ñ™Ô∏è –∏ ‚Ä¢. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π **, __, ##, -, * –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."},
                {"role": "user", "content": prompt}
            ],
            "max_tokens": 2500,
            "temperature": 0.3,
            "stream": False
        }
        
        try:
            response = requests.post(self.base_url, json=payload, headers=headers, timeout=60)
            response.raise_for_status()
            data = response.json()
            
            if 'choices' in data and len(data['choices']) > 0:
                return data['choices'][0]['message']['content']
            else:
                return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç API"
        except requests.exceptions.RequestException as e:
            return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API: {str(e)}"
        except Exception as e:
            return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö: {str(e)}"
