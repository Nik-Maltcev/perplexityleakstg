import requests
from datetime import datetime, timedelta

class PerplexityClient:
    def __init__(self, api_key):
        self.api_key = api_key
        self.base_url = "https://api.perplexity.ai/chat/completions"
    
    def get_weekly_leaks_news(self):
        today = datetime.now()
        week_ago = today - timedelta(days=7)
        
        prompt = f"""–°–æ–∑–¥–∞–π –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –æ–±–∑–æ—Ä —É—Ç–µ—á–µ–∫ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–µ—Ä–∏–æ–¥ —Å {week_ago.strftime('%d.%m.%Y')} –ø–æ {today.strftime('%d.%m.%Y')}.

üåç –†–µ–≥–∏–æ–Ω—ã: –†–æ—Å—Å–∏—è, –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω, –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω, –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω, –ë–µ–ª–∞—Ä—É—Å—å, –ê—Ä–º–µ–Ω–∏—è, –ì—Ä—É–∑–∏—è

üìä –§–æ—Ä–º–∞—Ç –æ–±–∑–æ—Ä–∞:

1. üìà –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê
   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤
   - –û–±—â–∏–π –æ–±—ä—ë–º —Å–∫–æ–º–ø—Ä–æ–º–µ—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
   - –¢—Ä–µ–Ω–¥—ã –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–π –Ω–µ–¥–µ–ª–µ–π

2. üî• –ö–†–£–ü–ù–ï–ô–®–ò–ï –ò–ù–¶–ò–î–ï–ù–¢–´
   –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞:
   ‚Ä¢ üìÖ –î–∞—Ç–∞
   ‚Ä¢ üèõÔ∏è –ö–æ–º–ø–∞–Ω–∏—è/–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è
   ‚Ä¢ üåé –°—Ç—Ä–∞–Ω–∞
   ‚Ä¢ üìä –ú–∞—Å—à—Ç–∞–± (–∫–æ–ª-–≤–æ –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏—Ö)
   ‚Ä¢ üìù –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö (–ø–∞—Å–ø–æ—Ä—Ç–∞, –∫–∞—Ä—Ç—ã, –º–µ–¥. –¥–∞–Ω–Ω—ã–µ –∏ —Ç.–¥.)
   ‚Ä¢ ‚ö†Ô∏è –ü—Ä–∏—á–∏–Ω–∞ —É—Ç–µ—á–∫–∏
   ‚Ä¢ üõ°Ô∏è –ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –∏ —Ä–∏—Å–∫–∏

3. üí° –ê–ù–ê–õ–ò–¢–ò–ö–ê –ò –í–´–í–û–î–´
   - –û—Å–Ω–æ–≤–Ω—ã–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏
   - –ù–∞–∏–±–æ–ª–µ–µ –ø–æ–¥–≤–µ—Ä–∂–µ–Ω–Ω—ã–µ —Å–µ–∫—Ç–æ—Ä–∞
   - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∑–∞—â–∏—Ç–µ

‚ùó –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- –¢–æ–ª—å–∫–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã–µ –∏–Ω—Ü–∏–¥–µ–Ω—Ç—ã
- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã –∏ —Ñ–∞–∫—Ç—ã
- –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–Ω
- –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å

–ï—Å–ª–∏ —É—Ç–µ—á–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –Ω–∞–ø–∏—à–∏: "üîí –ó–∞ –ø—Ä–æ—à–µ–¥—à—É—é –Ω–µ–¥–µ–ª—é –∫—Ä—É–ø–Ω—ã—Ö —É—Ç–µ—á–µ–∫ –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–µ–≥–∏–æ–Ω–µ –Ω–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ."""

        headers = {
            "Authorization": f"Bearer {self.api_key}",
            "Content-Type": "application/json"
        }
        
        payload = {
            "model": "sonar-pro",
            "messages": [
                {"role": "system", "content": "–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç-–∞–Ω–∞–ª–∏—Ç–∏–∫ –ø–æ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. –°–æ–∑–¥–∞–≤–∞–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±–∑–æ—Ä—ã —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Ü–∏—Ñ—Ä–∞–º–∏ –∏ —Ñ–∞–∫—Ç–∞–º–∏."},
                {"role": "user", "content": prompt}
            ],
            "max_tokens": 3000,
            "temperature": 0.3,
            "stream": False
        }
        
        try:
            response = requests.post(self.base_url, json=payload, headers=headers, timeout=60)
            response.raise_for_status()
            data = response.json()
            
            # –°–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏, –æ—Ç–≤–µ—Ç –≤ –ø–æ–ª–µ choices[0].message.content
            if 'choices' in data and len(data['choices']) > 0:
                return data['choices'][0]['message']['content']
            else:
                return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç API"
        except requests.exceptions.RequestException as e:
            return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API: {str(e)}"
        except Exception as e:
            return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö: {str(e)}"
