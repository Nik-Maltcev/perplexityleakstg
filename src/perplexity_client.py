import requests
from datetime import datetime, timedelta

class PerplexityClient:
    def __init__(self, api_key):
        self.api_key = api_key
        self.base_url = "https://api.perplexity.ai/chat/completions"
    
    def get_weekly_leaks_news(self):
        today = datetime.now()
        week_ago = today - timedelta(days=7)
        
        prompt = f"""–ù–∞–π–¥–∏ —Å–∞–º—ã–µ –∑–Ω–∞—á–∏–º—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ–± —É—Ç–µ—á–∫–∞—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥ —Å {week_ago.strftime('%d.%m.%Y')} –ø–æ {today.strftime('%d.%m.%Y')}.

üåç –†–µ–≥–∏–æ–Ω—ã: –†–æ—Å—Å–∏—è, –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω, –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω, –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω, –ë–µ–ª–∞—Ä—É—Å—å, –ê—Ä–º–µ–Ω–∏—è, –ì—Ä—É–∑–∏—è

üéØ –§–æ–∫—É—Å –Ω–∞:
‚Ä¢ –ö—Ä—É–ø–Ω—ã–µ —É—Ç–µ—á–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –ê—Ç–∞–∫–∏ –Ω–∞ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
‚Ä¢ –í–∑–ª–æ–º—ã –∏ —Ö–∞–∫–µ—Ä—Å–∫–∏–µ –∞—Ç–∞–∫–∏
‚Ä¢ DDoS-–∞—Ç–∞–∫–∏ —Å –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º–∏
‚Ä¢ Ransomware –∞—Ç–∞–∫–∏
‚Ä¢ –ò–Ω—Ü–∏–¥–µ–Ω—Ç—ã —Å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º–∏ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º–∏

üìä –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ - —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±–∑–æ—Ä:

1. üìà –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê
   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞—á–∏–º—ã—Ö –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é
   - –û–±—â–∏–π –º–∞—Å—à—Ç–∞–± (–ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏—Ö/–¥–∞–Ω–Ω—ã—Ö)

2. üî• –ö–†–£–ü–ù–ï–ô–®–ò–ï –ò–ù–¶–ò–î–ï–ù–¢–´ (–º–∏–Ω–∏–º—É–º 1, –º–∞–∫—Å–∏–º—É–º 5-7)
   –î–ª—è –∫–∞–∂–¥–æ–≥–æ:
   ‚Ä¢ üìÖ –î–∞—Ç–∞
   ‚Ä¢ üèõÔ∏è –ö–æ–º–ø–∞–Ω–∏—è/–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è
   ‚Ä¢ üåé –°—Ç—Ä–∞–Ω–∞
   ‚Ä¢ üéØ –¢–∏–ø –∞—Ç–∞–∫–∏
   ‚Ä¢ üìä –ú–∞—Å—à—Ç–∞–±
   ‚Ä¢ üìù –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö
   ‚Ä¢ ‚ö†Ô∏è –ú–µ—Ç–æ–¥ –∞—Ç–∞–∫–∏
   ‚Ä¢ üõ°Ô∏è –ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è
   ‚Ä¢ üîó –ò—Å—Ç–æ—á–Ω–∏–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

3. üí° –í–´–í–û–î–´
   - –û—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã
   - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

‚ùó –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- –¢–û–õ–¨–ö–û —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥
- –¢–û–õ–¨–ö–û –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã–µ –∏–Ω—Ü–∏–¥–µ–Ω—Ç—ã –∏–∑ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã –∏ —Ñ–∞–∫—Ç—ã
- –ï—Å–ª–∏ –∑–∞ –Ω–µ–¥–µ–ª—é –Ω–µ—Ç –∑–Ω–∞—á–∏–º—ã—Ö –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤ - –Ω–∞–ø–∏—à–∏ –æ–± —ç—Ç–æ–º —á–µ—Å—Ç–Ω–æ

–ï—Å–ª–∏ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: "üîí –ó–∞ –ø—Ä–æ—à–µ–¥—à—É—é –Ω–µ–¥–µ–ª—é –∫—Ä—É–ø–Ω—ã—Ö –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ —Ä–µ–≥–∏–æ–Ω–µ –Ω–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ.\""""

        headers = {
            "Authorization": f"Bearer {self.api_key}",
            "Content-Type": "application/json"
        }
        
        payload = {
            "model": "sonar-pro",
            "messages": [
                {"role": "system", "content": "–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç-–∞–Ω–∞–ª–∏—Ç–∏–∫ –ø–æ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ —É—Ç–µ—á–∫–∞—Ö –¥–∞–Ω–Ω—ã—Ö, –≤–∑–ª–æ–º–∞—Ö –∏ DDoS-–∞—Ç–∞–∫–∞—Ö. –°–æ–∑–¥–∞–≤–∞–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±–∑–æ—Ä—ã —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Ü–∏—Ñ—Ä–∞–º–∏, —Ñ–∞–∫—Ç–∞–º–∏ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –¥–µ—Ç–∞–ª—è–º–∏ –∞—Ç–∞–∫."},
                {"role": "user", "content": prompt}
            ],
            "max_tokens": 2500,
            "temperature": 0.3,
            "stream": False
        }
        
        try:
            response = requests.post(self.base_url, json=payload, headers=headers, timeout=60)
            response.raise_for_status()
            data = response.json()
            
            if 'choices' in data and len(data['choices']) > 0:
                return data['choices'][0]['message']['content']
            else:
                return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç API"
        except requests.exceptions.RequestException as e:
            return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API: {str(e)}"
        except Exception as e:
            return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö: {str(e)}"
